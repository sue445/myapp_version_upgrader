name: upgrade_go

on:
  push:
    paths:
      # common
      - "lib/base_runner.rb"
      - "Gemfile"
      - "Gemfile.lock"
      - ".ruby-version"

      - ".github/workflows/upgrade_go.yml"
      - "bin/upgrade_go"
      - "cookbooks/upgrade_go_version.rb"
      - "lib/go_updater.rb"

env:
  ASSIGNEE: sue445

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

      matrix:
        include:
          - repo: "sue445/feed_squeezer"
            go_version: "1.23"

          - repo: "sue445/gitpanda"
            go_version: "1.23.4"

          - repo: "sue445/plant_erd"
            go_version: "1.23"

          - repo: "sue445/terraform-version-updater"
            go_version: "1.23"

          - repo: "sue445/zatsu_monitor"
            go_version: "1.23"

          # c.f. https://cloud.google.com/appengine/docs/standard/lifecycle/support-schedule#go
          - repo: "sue445/condo3"
            go_version: "1.22"

    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_PRIVATE_KEY }}

      - name: checkout target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repo }}
          token:      ${{ steps.generate_token.outputs.token }}
          path:       tmp/repo/

      - run: ls -l tmp/repo/

      - name: Run ./bin/upgrade_go
        run: |
          set -xe

          git config --global user.email "version_updater@example.com"
          git config --global user.name "version_updater"

          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            export DRY_RUN=false
          else
            export DRY_RUN=true
          fi
          ./bin/upgrade_go
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          GITHUB_REPO:  ${{ matrix.repo }}
          GO_VERSION:   ${{ matrix.go_version }}
          # LOG_LEVEL:    debug

      - name: Slack Notification (not success)
        uses: act10ns/slack@v2
        if: "! success()"
        continue-on-error: true
        with:
          status: ${{ job.status }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          matrix: ${{ toJson(matrix) }}

  notify:
    needs:
      - build

    runs-on: ubuntu-latest

    steps:
      - name: Slack Notification (success)
        uses: act10ns/slack@v2
        if: always()
        continue-on-error: true
        with:
          status: ${{ job.status }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
